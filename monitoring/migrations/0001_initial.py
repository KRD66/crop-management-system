# Generated by Django 5.1.6 on 2025-09-09 05:41

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Crop',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('variety', models.CharField(blank=True, max_length=100)),
                ('crop_type', models.CharField(choices=[('cereal', 'Cereal'), ('vegetable', 'Vegetable'), ('fruit', 'Fruit'), ('legume', 'Legume'), ('root', 'Root Crop'), ('other', 'Other')], default='other', max_length=20)),
                ('growing_season_days', models.PositiveIntegerField(blank=True, help_text='Average number of days from planting to harvest', null=True)),
                ('expected_yield_per_hectare', models.DecimalField(blank=True, decimal_places=2, help_text='Expected yield in tons per hectare', max_digits=8, null=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Crop',
                'verbose_name_plural': 'Crops',
                'ordering': ['name', 'variety'],
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('location', models.CharField(help_text='Farm location/address', max_length=200)),
                ('total_area_hectares', models.DecimalField(decimal_places=2, help_text='Total farm area in hectares', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('description', models.TextField(blank=True, help_text='Farm description')),
                ('contact_phone', models.CharField(blank=True, max_length=20)),
                ('contact_email', models.EmailField(blank=True, max_length=254)),
                ('established_date', models.DateField(blank=True, null=True)),
                ('soil_type', models.CharField(blank=True, max_length=100)),
                ('climate_zone', models.CharField(blank=True, max_length=100)),
                ('water_source', models.CharField(blank=True, max_length=100)),
                ('certifications', models.CharField(blank=True, help_text='Organic, Fair Trade, etc.', max_length=200)),
                ('is_active', models.BooleanField(default=True, help_text='Is this farm currently active?')),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('notes', models.TextField(blank=True)),
                ('manager', models.ForeignKey(help_text='Farm manager responsible for this farm', on_delete=django.db.models.deletion.CASCADE, related_name='managed_farms', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Farm',
                'verbose_name_plural': 'Farms',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Field',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('area_hectares', models.DecimalField(decimal_places=2, max_digits=8, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('planting_date', models.DateField()),
                ('expected_harvest_date', models.DateField()),
                ('soil_type', models.CharField(blank=True, max_length=100)),
                ('irrigation_type', models.CharField(blank=True, max_length=100)),
                ('is_active', models.BooleanField(default=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.crop')),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.farm')),
                ('supervisor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='supervised_fields', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Field',
                'verbose_name_plural': 'Fields',
                'ordering': ['farm__name', 'name'],
                'unique_together': {('farm', 'name')},
            },
        ),
        migrations.CreateModel(
            name='HarvestRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('harvest_date', models.DateField()),
                ('quantity_tons', models.DecimalField(decimal_places=2, max_digits=10)),
                ('quality_grade', models.CharField(choices=[('A', 'A'), ('B', 'B'), ('C', 'C')], max_length=1)),
                ('status', models.CharField(default='completed', max_length=20)),
                ('weather_conditions', models.CharField(blank=True, max_length=100)),
                ('moisture_content', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_harvest_records', to=settings.AUTH_USER_MODEL)),
                ('field', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.field')),
                ('harvested_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvested_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-harvest_date'],
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity_tons', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('storage_location', models.CharField(max_length=200)),
                ('storage_condition', models.CharField(choices=[('dry', 'Dry Storage'), ('cold', 'Cold Storage'), ('frozen', 'Frozen Storage'), ('controlled', 'Controlled Atmosphere'), ('ambient', 'Ambient Storage')], default='ambient', max_length=20)),
                ('quality_grade', models.CharField(choices=[('A', 'Grade A - Premium'), ('B', 'Grade B - Good'), ('C', 'Grade C - Average'), ('D', 'Grade D - Below Average')], max_length=1)),
                ('date_stored', models.DateField(default=django.utils.timezone.now)),
                ('expiry_date', models.DateField(blank=True, null=True)),
                ('batch_number', models.CharField(blank=True, max_length=50)),
                ('unit_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price per ton', max_digits=10, null=True)),
                ('is_reserved', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('crop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='monitoring.crop')),
                ('harvest_record', models.ForeignKey(blank=True, help_text='Link to the harvest record if this inventory came from a specific harvest', null=True, on_delete=django.db.models.deletion.SET_NULL, to='monitoring.harvestrecord')),
                ('managed_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='managed_inventory', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Inventory Item',
                'verbose_name_plural': 'Inventory Items',
                'ordering': ['-date_stored', 'crop__name'],
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('farm_manager', 'Farm Manager'), ('field_supervisor', 'Field Supervisor'), ('field_worker', 'Field Worker'), ('inventory_manager', 'Inventory Manager')], default='field_worker', max_length=20)),
                ('supabase_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('phone_number', models.CharField(blank=True, max_length=20, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
    ]
